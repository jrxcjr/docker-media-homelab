version: '3.8'
#this contains jackett,sonarr,radarr,transmission
# https://medium.com/linux-shots/self-host-media-stack-jellyfin-radarr-sonarr-jackett-transmission-3e6a0adf716e 
# template used to build this docker file - https://github.com/navilg/media-stack/blob/main/docker-compose.yml#L230

services:
  jackett: #Jackett is the service that is used to setup all the Torznab indexers to fetch the magnets for download. 
    image: linuxserver/jackett:latest 
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - jackett-config:/config 
      - jackett-blackhole:/downloads 
    networks:
      - mediaServerNetwork #This is the internal network that must run all of the comms between containers.
    ports:
      - 9117:9117
    restart: unless-stopped

  prowlarr: #The prowlarr service, can be used to setup indexers that automatically sync with Sonarr and Radarr
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
    volumes:
      - prowlarr-config:/config 
    networks:
      - mediaServerNetwork
    ports:
      - 9696:9696
    restart: unless-stopped

  radarr: #Radarr is the service used to track all the torrent files and requests for movies.  
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
    volumes:
      - radarr-config:/config
      - torrent-downloads:/downloads 
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr: #Sonarr is the service used to track all the torrent files and requests for tv series. 
    image: linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - mediaServerNetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
    volumes:
      - sonarr-config:/config
      - torrent-downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
    volumes:
      - bazarr-config:/config
      - torrent-downloads:/downloads
    ports:
      - 6767:6767
    restart: unless-stopped

  transmission: #Transmission is the torrent downloading service for the requested tv series/movies.
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
      - TRANSMISSION_WEB_HOME= #optional
      - USER= #optional
      - PASS= #optional
      - WHITELIST= #optional
      - PEERPORT= #optional
      - HOST_WHITELIST= #optional
    volumes:
      - tx-config:/config
      - torrent-downloads:/downloads 
      - tx-watch:/watch 
    networks:
      - mediaServerNetwork
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
  
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      - mediaServerNetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Recife
    volumes:
      - jellyfin-config:/config
      - torrent-downloads:/data
    devices:
      - /dev/dri/:/dev/dri/ #mount GPU device as the id of the device to help the rendering of the media
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

volumes:
  jackett-config:
    driver: local #This is the type of setup that you must make whenever you have a local hard drive
    #that contains all of the media
    driver_opts: #See https://docs.docker.com/storage/volumes/
      type: 'none' 
      o: 'bind' #see https://docs.docker.com/storage/bind-mounts/
      device: '/mnt/external-homelab/jackett' #this is the location that the volume must be created to be able to store the media.
  jackett-blackhole: 
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/jackett-blackhole'        
  prowlarr-config: 
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/prowlarr'  
  radarr-config: 
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/radarr'  
  sonarr-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/sonarr'
  bazarr-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/bazarr'       
  torrent-downloads:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/torrent-downloads'    
  tx-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/tx-config' 
  tx-watch:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/tx-watch' 
  jellyfin-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/mnt/external-homelab/jellyfin'  

networks: #See https://docs.docker.com/compose/networking/
  mediaServerNetwork: #To run the creation of the network, please run the command `sudo docker network create mediaServerNetwork`
    external: true

    
